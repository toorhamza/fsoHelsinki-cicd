services:
  hello-frontend-dev:
    image: hello-front-dev
    build:
      context: todo-frontend
      dockerfile: ./todo-frontend/dev.Dockerfile
    volumes:
      - ./todo-frontend:/usr/src/app 
    ports:
      - 3000:3000
    container_name: hello-front-dev-main 
    environment:
      REACT_APP_BACKEND_URL: 'http://localhost:8080/api/'
  nginx:
    image: nginx:1.20.1
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
      - 8080:80
    container_name: reverse-proxy-main
    depends_on:
      - hello-frontend-dev 
  
  hello-backend-dev:
    image: fs-hello-world-dev
    build:
      context: todo-backend # The context will pick this directory as the "build context"
      dockerfile: ./todo-backend/dev.Dockerfile # This will simply tell which dockerfile to read
    volumes:
      - ./todo-backend:/usr/src/app # The path can be relative, so ./ is enough to say "the same location as the docker-compose.yml"
    ports:
      - 9000:9000
    container_name: fs-hello-world-dev # This will name the container hello-front-dev
    environment: 
    - REDIS_URL=redis://redis:6379
    - MONGO_URL=mongodb://the_username:the_password@mongo:27017/the_database
    - PORT=9000
  mongo:
    image: mongo
    ports:
      - 3456:27017
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
      MONGO_INITDB_DATABASE: the_database
    volumes:
      - ./todo-backend/mongo/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js
      - ./todo-backend/mongo_data:/data/db
  redis:
    image: redis
    ports:
      - 6379:6379
    command: ['redis-server', '--appendonly', 'yes'] # Overwrite the CMD
    volumes: # Declare the volume
      - ./todo-backend/redis_data:/data
